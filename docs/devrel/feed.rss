<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>The Vue Point</title>
        <link>https://blog.vuejs.org</link>
        <description>The official blog for the Vue.js project</description>
        <lastBuildDate>Thu, 24 Nov 2022 16:10:47 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <image>
            <title>The Vue Point</title>
            <url>https://vuejs.org/images/logo.png</url>
            <link>https://blog.vuejs.org</link>
        </image>
        <copyright>Copyright (c) 2021-present, Yuxi (Evan) You and blog contributors</copyright>
        <item>
            <title><![CDATA[Volar 1.0 "Nika" Released!]]></title>
            <link>https://blog.vuejs.org/posts/volar-1.0.html</link>
            <guid>https://blog.vuejs.org/posts/volar-1.0.html</guid>
            <pubDate>Mon, 10 Oct 2022 12:00:00 GMT</pubDate>
            <description><![CDATA[<p>We are happy to announce that we have released v1.0 of Volar, the official IDE/TS tooling support for Vue! üéâ</p>
<p>This major version ships with tons of improvements across the board. In addition to improving UX, performance, and package size, we also released Plugin API v1 and refactored the core code to be framework-agnostic.</p>
<p>Ê≥®ÔºöÁµêÂ∞æÈôÑÊúâ‰∏≠ÊñáÁâàÊú¨ (There is Chinese version of this post at the end)„ÄÇ</p>
]]></description>
            <content:encoded><![CDATA[<div><p>We are happy to announce that we have released v1.0 of Volar, the official IDE/TS tooling support for Vue! üéâ</p><p>This major version ships with tons of improvements across the board. In addition to improving UX, performance, and package size, we also released Plugin API v1 and refactored the core code to be framework-agnostic.</p><p>Ê≥®ÔºöÁµêÂ∞æÈôÑÊúâ‰∏≠ÊñáÁâàÊú¨ (There is Chinese version of this post at the end)„ÄÇ</p><hr><p>Earlier this year in March, Vue creator Evan You started sponsoring me (<a href="https://twitter.com/johnsoncodehk" target="_blank" rel="noreferrer">@johnsoncodehk</a>) to work full-time on the development of Volar, with the goal of pushing it towards 1.0. After 7 months of hard work, we have finally achieved this goal!</p><p>There are so many updates that you most likely missed some. Below we have summarized the most significant changes from the past 7 months:</p><h3 id="feature-updates" tabindex="-1">Feature Updates <a class="header-anchor" href="#feature-updates" aria-hidden="true">#</a></h3><ul><li>Implemented <code>Goto Code</code> and <code>Highlight Selection Dom Elements</code> for Vite and Nuxt 3 Preview (highly recommend you try it out!)</li><li>Implemented <a href="https://github.com/johnsoncodehk/volar/discussions/1511" target="_blank" rel="noreferrer">Component Preview</a></li><li>Added setting <code>format.initialIndent</code> to specify the initial indent of SFC blocks</li><li>Implemented support for Web IDE</li><li>No longer built-in support for <code>&lt;template lang=&quot;pug&quot;&gt;</code> (In v1.0 you need to install <a href="https://www.npmjs.com/package/@volar/vue-language-plugin-pug" target="_blank" rel="noreferrer">@volar/vue-language-plugin-pug</a>)</li></ul><h3 id="out-of-the-box-usage-improvements" tabindex="-1">Out-of-the-Box Usage Improvements <a class="header-anchor" href="#out-of-the-box-usage-improvements" aria-hidden="true">#</a></h3><ul><li>No longer needs <code>&quot;jsx&quot;: &quot;preserve&quot;</code> by default, and also will no longer conflict with <code>@types/react</code> (unless explicitly enabled in <code>vueCompilerOptions.jsxTemplates</code>)</li><li>Always wraps component options in <code>defineComponent()</code> or <code>Vue.extend</code> by default so that you can simply export an object literal.</li><li>Unknown component tags is not in warning color anymore.</li><li>TypeScript support is improved in <code>&lt;template&gt;</code> block for JS components</li><li>Reduce the need to read the README for new users. Common project setup problems will be automatically detected and prompted in status bar (such as incorrectly setting <code>vueCompilerOptions.target</code>)</li></ul><h3 id="ux-dx-improvements" tabindex="-1">UX / DX Improvements <a class="header-anchor" href="#ux-dx-improvements" aria-hidden="true">#</a></h3><ul><li>Takeover mode no longer shows a pop-up when enabled</li><li>There is a new faster command to use when user needs to restart server: <code>Reload Project</code>. This command won&#39;t restart the server but will clear the cache. <code>Restart Vue Server</code> is still available to hard-reload the server.</li><li>&quot;Show Virtual Scripts&quot; command is added. Check out how it works <a href="https://twitter.com/johnsoncodehk/status/1577046525490126848" target="_blank" rel="noreferrer">here</a>.</li><li>Incrementally calculate error range for old diagnostic results to prevent annoying flickering problem</li><li>Added support for adding and switching workspaces without restarting the server</li><li>Simplified display of name casing tool in the status bar, and also supports prop name casing conversion</li></ul><h3 id="typescript-improvements" tabindex="-1">TypeScript Improvements <a class="header-anchor" href="#typescript-improvements" aria-hidden="true">#</a></h3><ul><li>vue-tsc supports <code>--watch</code></li><li>vue-tsc supports <code>--declaration --emitDeclarationOnly</code> to emit dts for components</li><li>Support for <code>Inlay Hints</code></li><li>Support <code>Find File References</code></li><li>Support for <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-typescript-next" target="_blank" rel="noreferrer">JavaScript and TypeScript Nightly</a></li><li>Fixed <code>&lt;script&gt;</code> types could not be used in <code>&lt;template&gt;</code></li><li>Added <code>vueCompilerOptions.strictTemplates</code> option to support stricter template type checking for report unknown component tag and props</li></ul><h3 id="performance-improvements" tabindex="-1">Performance Improvements <a class="header-anchor" href="#performance-improvements" aria-hidden="true">#</a></h3><ul><li>Much faster SourceMap mapping</li><li>Implemented incremental update for <code>SFC AST</code> and <code>Template AST</code></li><li>Template codegen simplified to reduce the memory footprint for each Vue file</li><li>When a Monorepo has multiple TS projects, TS SourceFile instance is reused to reduce memory usage.</li><li>Implemented auto import cache of tsserver in LSP server to speedup autocomplete</li><li>Implemented named pipe base cancellation token of tsserver in LSP server</li><li>Optimized Bundle to reduce the package size, and extension startup faster</li></ul><p>In addition, some performance issues with larger projects may be due to tsconfig including too many unneeded files, we also have a new <a href="https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.vscode-tsconfig-helper" target="_blank" rel="noreferrer">VSCode plugin</a> to check what files your tsconfig contains.</p><h3 id="generic-language-server-framework" tabindex="-1">Generic Language Server Framework <a class="header-anchor" href="#generic-language-server-framework" aria-hidden="true">#</a></h3><p>Volar core modules is now framework-agnostic, and you can use Volar to implement language servers other than Vue framework.</p><p>In this <a href="https://github.com/johnsoncodehk/volar/tree/master/examples" target="_blank" rel="noreferrer">example repo</a>, we have implemented <code>svelte-tsc</code>, <code>svelte-langauge-server</code> and other examples based on svelte2tsx.</p><p>There is also a <code>vue-and-svelte-language-server</code> example, which supports both Vue and Svelte in a single Language Server, avoiding the establishment of multiple Language Servers to establish expensive TypeScript LanguageService instances. It may helpful for framework like Astro which supports multiple languages.</p><h3 id="vuelanguageplugin-api" tabindex="-1">VueLanguagePlugin API <a class="header-anchor" href="#vuelanguageplugin-api" aria-hidden="true">#</a></h3><p>Now supported <code>vueCompilerOptions.plugins</code> option to specify additional plugins to alter virtual code generation.</p><p>The codegen API of <code>VueLanguagePlugin</code> uses <code>muggle-string</code> instead of <code>magic-string</code>, <code>muggle-string</code> is still lacking major features in earlier versions, but it is decoupled from Volar so it can be developed independently, if you need to develop in <code>VueLanguagePlugin</code>, please track for <a href="https://github.com/johnsoncodehk/muggle-string" target="_blank" rel="noreferrer">https://github.com/johnsoncodehk/muggle-string</a> update.</p><h3 id="languageserviceplugin-api" tabindex="-1">LanguageServicePlugin API <a class="header-anchor" href="#languageserviceplugin-api" aria-hidden="true">#</a></h3><p>You can setup plugin to <code>volar.config.js</code> to change the language server behavior, for example you can change the formatter used by <code>&lt;template&gt;</code> to Prettier.</p><p>We have a single repo for maintaining common plugins: <a href="https://github.com/johnsoncodehk/volar-plugins" target="_blank" rel="noreferrer">https://github.com/johnsoncodehk/volar-plugins</a></p><h3 id="external-tools-support" tabindex="-1">External Tools Support <a class="header-anchor" href="#external-tools-support" aria-hidden="true">#</a></h3><ul><li><code>@volar/vue-typescript</code> exposed organizeImports API for <code>prettier-plugin-organize-imports</code></li><li><code>@volar/vue-language-core</code> exposed <code>vue-tsconfig.schema.json</code> for IDEs other than VSCode</li><li>Implemented <code>vue-component-meta</code> for UI Library documentation generation</li></ul><h2 id="what-s-next" tabindex="-1">What&#39;s Next <a class="header-anchor" href="#what-s-next" aria-hidden="true">#</a></h2><p>Volar has been developed for more than two years so far. The development cost is huge for it just a VSCode plugin at beginning, and its project scope may also frighten some people who planned to make tools for other languages, so I hope to improve the core framework in v2.0 to make it easier for other languages that need to implement tooling to take advantage of the efforts made by Volar.</p><p>In addition there are some other things planned to do:</p><ul><li>Documentation website</li><li>Improve the bug report process</li><li>Support global installation of LangaugeServicePlugin</li><li>Bun base Language Server</li><li>Incremental update template codegen</li><li>Explore performance improvements in TypeScript and LSP source code</li></ul><p>After v1.0 is released I will go back to working full time and starting some other personal projects, while continuing to work on these in my spare time.</p><p>I also want to give a big shout out to <a href="https://nuxtjs.org/" target="_blank" rel="noreferrer">NuxtLabs</a>, who have been Platinum Sponsor since May, and all my other sponsors üôå. Your support ensures that I will be able to continue maintaining Volar after 1.0 to improve your Vue development experience!</p><p align="center"><a href="https://cdn.jsdelivr.net/gh/johnsoncodehk/sponsors/sponsors.svg"><img src="https://cdn.jsdelivr.net/gh/johnsoncodehk/sponsors/sponsors.svg"></a></p><p>Thank you for reading this blog!</p><hr><p>ÂæàÈ´òËààÂÆ£Â∏ÉÂú®‰ªäÂ§©ÂÆåÊàê‰∫ÜÊâÄÊúâ‰∏ªË¶ÅÂäüËÉΩ‰∏¶Áôº‰Ωà‰∫Üv1.0ÁâàÊú¨„ÄÇüéâ</p><p>ÈÄôÂÄã‰∏ªË¶ÅÁâàÊú¨ÂÖ®ÊñπÈù¢ÊîπÈÄ≤‰∫ÜÂ∑•ÂÖ∑ÔºåÈô§‰∫ÜÊîπÈÄ≤ UX„ÄÅÊÄßËÉΩ„ÄÅÂåÖÂ§ßÂ∞èÔºåÊàëÂÄëÈÇÑÁôº‰Ωà‰∫Ü Plugin API v1Ôºå‰ª•ÂèäÈáçÊßã‰∫ÜÊû∂Êßã‰ΩøÊ†∏ÂøÉ‰ª£Á¢ºËàáÊ°ÜÊû∂ÁÑ°Èóú„ÄÇ</p><p>‰ªäÂπ¥ÂàùÊàëËàá Vue ÁöÑ‰ΩúËÄÖ Evan ÈÅîÊàêÂçîË≠∞Ôºå‰ªñÂú® 3 ÊúàÈñãÂßãË≥áÂä©ÊàëÂÖ®ËÅ∑ÈñãÁôº Volar Áõ¥Ëá≥ÂÆåÊàê 1.0 ÁâàÊú¨ÔºåÁ∂ìÈÅé7ÂÄãÊúàÁöÑÂä™ÂäõÊàëÂÄëÁµÇÊñºÂÅöÂà∞‰∫ÜÈÄôÂÄãÁõÆÊ®ôÔºÅ</p><p>Â¶ÇÊûú‰Ω†Ê≤íÊúâËøΩËπ§ÊØèÂÄãÁâàÊú¨ÁöÑ changelogÔºå‰Ω†ÂèØËÉΩ‰∏çÁü•ÈÅìÁôºÁîü‰∫Ü‰ªÄÈ∫ºÔºåÊàëÊúÉÁ∞°ÂñÆÁ∏ΩÁµêÂú®ÈÄôÂçäÂπ¥ÈñìÂ∞ç‰Ω†ËºÉÊúâÊòéÈ°ØÂΩ±ÈüøÁöÑÊõ¥ÊîπÔºö</p><h3 id="ÂäüËÉΩÊõ¥Êñ∞" tabindex="-1">ÂäüËÉΩÊõ¥Êñ∞ <a class="header-anchor" href="#ÂäüËÉΩÊõ¥Êñ∞" aria-hidden="true">#</a></h3><ul><li>ÁÇ∫ Vite Âíå Nuxt 3 Preview ÂØ¶Áèæ‰∫Ü Goto Code Âíå Highlight Selection Dom ElementsÔºàÈùûÂ∏∏Êé®Ëñ¶‰Ω†Ë©¶‰∏ÄË©¶ÔºÅÔºâ</li><li>ÂØ¶Áèæ‰∫Ü <a href="https://github.com/johnsoncodehk/volar/discussions/1511" target="_blank" rel="noreferrer">Component Preview</a></li><li>Êñ∞Â¢û <code>format.initialIndent</code> Ë®≠ÁΩÆ‰ª•ÊåáÂÆö SFC blocks ÁöÑÂàùÂßãÁ∏ÆÈÄ≤</li><li>ÂØ¶Áèæ‰∫Ü Web IDE ÊîØÊåÅ</li><li>‰∏çÂÜçÂÖßÁΩÆÊîØÊåÅ <code>&lt;template lang=&quot;pug&quot;&gt;</code>ÔºàÂú®v1.0ÈúÄË¶ÅÂÆâË£ù<a href="https://www.npmjs.com/package/@volar/vue-language-plugin-pug" target="_blank" rel="noreferrer">@volar/vue-language-plugin-pug</a>Ôºâ</li></ul><h3 id="ÈñãÁÆ±Âç≥Áî®ÊîπÈÄ≤" tabindex="-1">ÈñãÁÆ±Âç≥Áî®ÊîπÈÄ≤ <a class="header-anchor" href="#ÈñãÁÆ±Âç≥Áî®ÊîπÈÄ≤" aria-hidden="true">#</a></h3><ul><li>È†êË®≠‰∏çÂÜçÈúÄË¶Å <code>&quot;jsx&quot;: &quot;preserve&quot;</code>Ôºå‰∏¶‰∏î‰∏çÊúÉËàá <code>@types/react</code> Ë°ùÁ™ÅÔºàÈô§ÈùûÊòéÁ¢∫ÂïüÁî® <code>vueCompilerOptions.jsxTemplates</code>Ôºâ</li><li>È†êË®≠Á∏ΩÊòØ‰ª• <code>defineComponent()</code> ÂåÖË£ùComponent Options</li><li>‰∏çÂÜç‰ª•Ë≠¶ÂëäËâ≤È°ØÁ§∫Êú™Áü• Component Tag</li><li>ÊîπÈÄ≤ JS ÁµÑ‰ª∂‰∏≠ÁöÑ Template TypeScript ÊîØÊåÅ</li><li>Ê∏õÂ∞ëÂ∞çÈñ±ËÆÄ README ÁöÑ‰æùË≥¥ÔºåÁèæÂú®ÊúÉËá™ÂãïÊ™¢Ê∏¨Â∏∏Ë¶ãÁöÑÈ†ÖÁõÆË®≠ÁΩÆÂïèÈ°åÔºà‰æãÂ¶ÇÈåØË™§Âú∞Ë®≠ÁΩÆ <code>vueCompilerOptions.target</code>ÔºâÔºåÁôºÁèæÂïèÈ°åÊôÇÊúÉÂú®ÁãÄÊÖãÊ¨ÑÊèêÁ§∫</li></ul><h3 id="ux-dx-ÊîπÈÄ≤" tabindex="-1">UX / DX ÊîπÈÄ≤ <a class="header-anchor" href="#ux-dx-ÊîπÈÄ≤" aria-hidden="true">#</a></h3><ul><li>ÂïüÁî® Takeover mode ‰∏çÂÜçÂΩàÂá∫ÊèêÁ§∫</li><li>Êõ¥Âø´ÁöÑ &quot;Reload Project&quot; ÂëΩ‰ª§‰ª£Êõø &quot;Restart Vue server&quot;</li><li>Êñ∞ÁöÑ &quot;Show Virtual Scripts&quot; ÂëΩ‰ª§‰ª£Êõø &quot;Write Virtual Files&quot;</li><li>Â¢ûÈáèÊõ¥Êñ∞ÈÅéÂéªÁöÑË®∫Êñ∑ÁµêÊûúÈò≤Ê≠¢ÁÖ©‰∫∫ÁöÑÈñÉÁàçÂïèÈ°å</li><li>ÊîØÊåÅÂú®‰∏çÈáçÂïüÊúçÂãôÂô®ÁöÑÊÉÖÊ≥Å‰∏ãÊ∑ªÂä†ÊàñÂàáÊèõÂ∑•‰ΩúÂçÄ</li><li>Á∞°Âåñ Name casing tool Âú®ÁãÄÊÖãÊ¨ÑÁöÑÈ°ØÁ§∫ÊñπÂºèÔºå‰∏¶‰∏îÁèæÂú®‰πüÊîØÊåÅ Prop name casing ËΩâÊèõ</li></ul><h3 id="typescript-ÊîπÈÄ≤" tabindex="-1">TypeScript ÊîπÈÄ≤ <a class="header-anchor" href="#typescript-ÊîπÈÄ≤" aria-hidden="true">#</a></h3><ul><li>ÊîØÊåÅ‰∫Ü <code>vue-tsc --watch</code></li><li>ÊîØÊåÅ‰∫Ü Inlay Hints</li><li>ÊîØÊåÅ Find File References</li><li>ÊîØÊåÅ‰∫Ü <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-typescript-next" target="_blank" rel="noreferrer">JavaScript and TypeScript Nightly</a></li><li>Ëß£Ê±∫‰∫ÜÁÑ°Ê≥ïÂú® Template ÂºïÁî®È°ûÂûãÁöÑÂïèÈ°å</li><li>Êñ∞Â¢û <code>vueCompilerOptions.strictTemplates</code> ÈÅ∏È†ÖÊîØÊåÅÊõ¥Âö¥Ê†ºÁöÑTemplate type checkingÔºåÂú®‰ΩøÁî®Êú™Áü•ÁöÑComponent TagÂíåPropsÊôÇÂ†±ÂëäÈåØË™§</li></ul><h3 id="ÊÄßËÉΩÊîπÈÄ≤" tabindex="-1">ÊÄßËÉΩÊîπÈÄ≤ <a class="header-anchor" href="#ÊÄßËÉΩÊîπÈÄ≤" aria-hidden="true">#</a></h3><ul><li>Â§ßÈáèÊîπÂñÑ SourceMap mapping ÊÄßËÉΩ</li><li>ÂØ¶Áèæ SFC AST Âíå Template AST ÁöÑÂ¢ûÈáèÊõ¥Êñ∞</li><li>Á∞°Âåñ Template ÁîüÊàêÁöÑ‰ª£Á¢º‰ª•Èôç‰Ωé‰∫ÜÊØèÂÄã Vue Êñá‰ª∂Áî¢ÁîüÁöÑÂÖßÂ≠ò‰ΩîÁî®</li><li>ÁÇ∫ Monorepo Â§öÂÄã TS project ÂÖ±Áî® TS SourceFile ÂØ¶‰æã</li><li>ÁßªÊ§ç‰∫Ü tsserver Ëá™ÂãïÂ∞éÂÖ•ÁöÑÁ∑©Â≠òÈÇèËºØÂä†Âø´Ëá™ÂãïÂÆåÊàê</li><li>ÁßªÊ§ç‰∫Ü tsserver Âü∫Êñº Named Pipe ÁöÑ Cancellation Token ÂØ¶Áèæ‰ª•Ëß£Ê±∫‰∫Ü LSP Ë´ãÊ±ÇÈòªÂ°û</li><li>ÂÑ™Âåñ Bundle Èôç‰ΩéÂåÖÂ§ßÂ∞èÔºå‰∏¶‰∏îÊèí‰ª∂ÂïüÂãïÈÄüÂ∫¶Êõ¥Âø´</li></ul><p>Âè¶Â§ñ‰∏Ä‰∫õÂ§ßÂûãÈ†ÖÁõÆÁöÑÊÄßËÉΩÂïèÈ°åÂèØËÉΩÊòØÁî±Êñº tsconfig ÂåÖÂê´‰∫ÜÂ§™Â§ö‰∏çÈúÄË¶ÅÁöÑÊñá‰ª∂ÔºåÊàëÂÄëÈÇÑÊúâ‰∏ÄÂÄãÊñ∞ÁöÑ<a href="https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.vscode-tsconfig-helper" target="_blank" rel="noreferrer">VSCodeÊèí‰ª∂</a>Áî®‰æÜÊ™¢Êü•‰Ω†ÁöÑtsconfigÂåÖÂê´ÁöÑÊñá‰ª∂„ÄÇ</p><h3 id="ÈÄöÁî®ÁöÑ-language-server-Ê°ÜÊû∂" tabindex="-1">ÈÄöÁî®ÁöÑ Language Server Ê°ÜÊû∂ <a class="header-anchor" href="#ÈÄöÁî®ÁöÑ-language-server-Ê°ÜÊû∂" aria-hidden="true">#</a></h3><p>Volar ÁöÑÊ†∏ÂøÉ‰ª£Á¢ºÁèæÂú®ËàáÊ°ÜÊû∂ÁÑ°ÈóúÔºå‰Ω†ÂèØ‰ª•‰ΩøÁî® Volar ÁÇ∫ Vue ‰ª•Â§ñÁöÑË™ûË®ÄÂØ¶ÁèæË™ûË®ÄÊúçÂãôÂô®„ÄÇ</p><p>Âú® repo ÁöÑ <a href="https://github.com/johnsoncodehk/volar/tree/master/examples" target="_blank" rel="noreferrer">examples ÁõÆÈåÑ</a>ÔºåÊàëÂÄëÂü∫Êñº <code>svelte2tsx</code> ÂàÜÂà•ÂØ¶Áèæ‰∫Ü <code>svelte-tsc</code>, <code>svelte-langauge-server</code> Á≠âÁ≠âÁ§∫‰æã„ÄÇ</p><p>ÁõÆÈåÑ‰∏≠ÈÇÑÊúâ‰∏ÄÂÄã <code>vue-and-svelte-language-server</code> Á§∫‰æãÔºåÂú®ÂñÆÂÄã Language Server ÂêåÊôÇÊîØÊåÅ Vue Âíå SvelteÔºåÈÅøÂÖçÂ§öÂÄã Language Server Âª∫Á´ãÂàÜÂà•Âª∫Á´ãÊòÇË≤¥ÁöÑ TypeScript LanguageService ÂØ¶‰æãÔºåÂ∞çÊñºÂÉè Astro ÂêåÊôÇÊîØÊåÅÂ§öÂÄãÂâçÁ´ØÊ°ÜÊû∂ÁöÑÈ†ÖÁõÆÂèØËÉΩÂæàÊúâÁî®„ÄÇ</p><h3 id="vuelanguageplugin-api-1" tabindex="-1">VueLanguagePlugin API <a class="header-anchor" href="#vuelanguageplugin-api-1" aria-hidden="true">#</a></h3><p>ÁèæÂú®ÊîØÊåÅ <code>vueCompilerOptions.plugins</code> ÈÅ∏È†ÖÊåáÂÆöÈ°çÂ§ñ plugin ‰æÜÊõ¥Êîπ virtual code ÁöÑÁîüÊàêÊñπÂºè„ÄÇ</p><p>VueLanguagePlugin ÁöÑ codegen API ‰ΩøÁî® <code>muggle-string</code> ËÄå‰∏çÊòØ <code>magic-string</code>Ôºå<code>muggle-string</code> ‰ªçÁÑ∂ÊòØÊó©ÊúüÁâàÊú¨Áº∫‰πè‰∏ªË¶ÅÂäüËÉΩÔºå‰ΩÜÊòØËàá Volar Ëß£ËÄ¶Âõ†Ê≠§ÂèØ‰ª•Áç®Á´ãÁôºÂ±ïÔºåÂ¶ÇÊûú‰Ω†ÈúÄË¶ÅÈñãÁôº <code>VueLanguagePlugin</code> Ë´ãÈóúÊ≥® <a href="https://github.com/johnsoncodehk/muggle-string" target="_blank" rel="noreferrer">https://github.com/johnsoncodehk/muggle-string</a> Êõ¥Êñ∞„ÄÇ</p><h3 id="languageserviceplugin-api-1" tabindex="-1">LanguageServicePlugin API <a class="header-anchor" href="#languageserviceplugin-api-1" aria-hidden="true">#</a></h3><p>‰Ω†ÂèØ‰ª•Âú® <code>volar.config.js</code> Ê∑ªÂä† plugin ‰æÜÊõ¥Êîπ language server ÁöÑË°åÁÇ∫Ôºå‰æãÂ¶ÇÂ∞á <code>&lt;template&gt;</code> ‰ΩøÁî®ÁöÑ formatter ÊîπÁÇ∫ Prettier„ÄÇ</p><p>ÊàëÂÄëÊúâ‰∏ÄÂÄãÂñÆÁç®ÁöÑ repo Áî®‰æÜÁ∂≠Ë≠∑Â∏∏Áî®ÁöÑ plugins: <a href="https://github.com/johnsoncodehk/volar-plugins" target="_blank" rel="noreferrer">https://github.com/johnsoncodehk/volar-plugins</a></p><h3 id="Â§ñÈÉ®Â∑•ÂÖ∑ÊîØÊåÅ" tabindex="-1">Â§ñÈÉ®Â∑•ÂÖ∑ÊîØÊåÅ <a class="header-anchor" href="#Â§ñÈÉ®Â∑•ÂÖ∑ÊîØÊåÅ" aria-hidden="true">#</a></h3><ul><li><code>@volar/vue-typescript</code> ÁÇ∫ <code>prettier-plugin-organize-imports</code> ÂÖ¨Èñã‰∫Ü organizeImports API</li><li><code>@volar/vue-language-core</code> ÁÇ∫VSCode‰ª•Â§ñÁöÑIDEÂÖ¨Èñã‰∫Ü <code>vue-tsconfig.schema.json</code></li><li>ÂØ¶Áèæ‰∫Ü <code>vue-component-meta</code> Áî®ÊñºUI LibraryÊñáÊ™îÁîüÊàê</li></ul><h2 id="what-s-next-1" tabindex="-1">What&#39;s Next <a class="header-anchor" href="#what-s-next-1" aria-hidden="true">#</a></h2><p>Volar Ëá≥‰ªäÈñãÁôº‰∫ÜÂÖ©Âπ¥Â§öÊôÇÈñìÔºåÂ∞çÊñºÂéüÊú¨Âè™ÊòØ‰∏ÄÂÄã VSCode Plugin ‰æÜË™™ÊäïÂÖ•ÁöÑÈñãÁôºÊàêÊú¨ÊòØÂ∑®Â§ßÁöÑÔºåÂêåÊôÇÂÆÉÁöÑÈ†ÖÁõÆ scope ‰πüÂèØËÉΩÂöáÊÄï‰∏Ä‰∫õÂéüÊú¨ÊâìÁÆóÁÇ∫Ë™ûË®ÄÂØ¶Áèæ Tooling ÁöÑ‰∫∫ÔºåÂõ†Ê≠§ÊàëÂ∏åÊúõÂú® v2.0 ÊîπÈÄ≤Ê†∏ÂøÉÊ°ÜÊû∂ÔºåËÆìÂÖ∂‰ªñÈúÄË¶ÅÂØ¶Áèæ Tooling ÁöÑË™ûË®ÄÊõ¥ÂÆπÊòìÂú∞Âà©Áî® Volar ÊâÄÂÅöÁöÑÂä™Âäõ„ÄÇ</p><p>Ê≠§Â§ñÈÇÑÊúâ‰∏Ä‰∫õË®àÂäÉÂÅöÁöÑ‰∫ãÊÉÖÔºö</p><ul><li>ÊñáÊ™îÁ∂≤Á´ô</li><li>ÊîπÈÄ≤ Bug report ÊµÅÁ®ã</li><li>ÊîØÊåÅÂÖ®Â±ÄÂÆâË£ù LangaugeServicePlugin</li><li>Âü∫Êñº Bun ÁöÑ Language Server</li><li>Â¢ûÈáèÊõ¥Êñ∞ template codegen</li><li>Êé¢Á¥¢ TypeScript Âíå LSP Ê∫ê‰ª£Á¢º‰∏≠ÁöÑÊÄßËÉΩÊîπÈÄ≤</li></ul><p>Áôº‰Ωàv1.0‰πãÂæåÊàëÂ∞áÊúÉÂõûÂà∞ÂÖ®ËÅ∑Â∑•‰ΩúÂíåÈñãÂßã‰∏Ä‰∫õÂÖ∂‰ªñÂÄã‰∫∫È†ÖÁõÆÔºåÂêåÊôÇÂú®Ê•≠È§òÊôÇÈñìÁπºÁ∫åÂÅöÈÄô‰∫õÂ∑•‰Ωú„ÄÇ</p><p>ÊàëÊÉ≥ÁÇ∫Âæû‰∫îÊúàÈñãÂßãÊàêÁÇ∫ Platinum Sponsor ÁöÑ <a href="https://nuxtjs.org/" target="_blank" rel="noreferrer">NuxtLabs</a> ‰ª•ÂèäÊâÄÊúâË¥äÂä©ËÄÖÂ§ßËÅ≤ÂëºÂñä üôåÔºåÈÄôÂæàÂ§ßÁ®ãÂ∫¶Âú∞‰øùË≠â‰∫ÜÊàëÂú®ÂÆåÊàê 1.0 ‰πãÂæå‰ªçÁÑ∂ËÉΩÂ§†ÁπºÁ∫åÁ∂≠Ë≠∑ Volar ‰ª•ÊîπÂñÑ‰Ω†ÁöÑ Vue ÈñãÁôºÈ´îÈ©óÔºÅ</p><p align="center"><a href="https://cdn.jsdelivr.net/gh/johnsoncodehk/sponsors/sponsors.svg"><img src="https://cdn.jsdelivr.net/gh/johnsoncodehk/sponsors/sponsors.svg"></a></p><p>ÊÑüË¨ù‰Ω†Èñ±ËÆÄÈÄôÁØáÊñáÁ´†ÔºÅ</p></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Vue 2.7 "Naruto" Released]]></title>
            <link>https://blog.vuejs.org/posts/vue-2-7-naruto.html</link>
            <guid>https://blog.vuejs.org/posts/vue-2-7-naruto.html</guid>
            <pubDate>Fri, 01 Jul 2022 12:00:00 GMT</pubDate>
            <description><![CDATA[<p align="center">
  <img width="300" height="128px" src="https://user-images.githubusercontent.com/499550/176823239-f59d75de-1d24-4b2d-b04b-fcc95db2903e.png" alt="naruto-vue-logo">
</p>
<p>Today we are happy to announce that Vue 2.7 &quot;Naruto&quot; has been released!</p>
]]></description>
            <content:encoded><![CDATA[<div><p align="center"><img width="300" height="128px" src="https://user-images.githubusercontent.com/499550/176823239-f59d75de-1d24-4b2d-b04b-fcc95db2903e.png" alt="naruto-vue-logo"></p><p>Today we are happy to announce that Vue 2.7 &quot;Naruto&quot; has been released!</p><hr><p>Despite Vue 3 now being the default version, we understand that there are still many users who have to stay on Vue 2 due to dependency compatibility, browser support requirements, or simply not enough bandwidth to upgrade. In Vue 2.7, we have backported some of the most important features from Vue 3 so that Vue 2 users can benefit from them as well.</p><h2 id="backported-features" tabindex="-1">Backported Features <a class="header-anchor" href="#backported-features" aria-hidden="true">#</a></h2><ul><li><a href="https://vuejs.org/guide/extras/composition-api-faq.html" target="_blank" rel="noreferrer">Composition API</a></li><li>SFC <a href="https://vuejs.org/api/sfc-script-setup.html" target="_blank" rel="noreferrer"><code>&lt;script setup&gt;</code></a></li><li>SFC <a href="https://vuejs.org/api/sfc-css-features.html#v-bind-in-css" target="_blank" rel="noreferrer">CSS v-bind</a></li></ul><p>In addition, the following APIs are also supported:</p><ul><li><p><code>defineComponent()</code> with improved type inference (compared to <code>Vue.extend</code>)</p></li><li><p><code>h()</code>, <code>useSlot()</code>, <code>useAttrs()</code>, <code>useCssModules()</code></p></li><li><p><code>set()</code>, <code>del()</code> and <code>nextTick()</code> are also provided as named exports in ESM builds.</p></li><li><p>The <code>emits</code> option is also supported, but only for type-checking purposes (does not affect runtime behavior)</p><p>2.7 also supports using ESNext syntax in template expressions. When using a build system, the compiled template render function will go through the same loaders / plugins configured for normal JavaScript. This means if you have configured Babel for <code>.js</code> files, it will also apply to the expressions in your SFC templates.</p></li></ul><h3 id="notes-on-api-exposure" tabindex="-1">Notes on API exposure <a class="header-anchor" href="#notes-on-api-exposure" aria-hidden="true">#</a></h3><ul><li><p>In ESM builds, these APIs are provided as named exports (and named exports only):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> Vue</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ref</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ref </span><span style="color:#676E95;">// undefined, use named export instead</span></span>
<span class="line"></span></code></pre></div></li><li><p>In UMD and CJS builds, these APIs are exposed as properties on the global <code>Vue</code> object.</p></li><li><p>When bundling with CJS builds externalized, bundlers should be able to handle ESM interop when externalizing CJS builds.</p></li></ul><h3 id="behavior-differences-from-vue-3" tabindex="-1">Behavior Differences from Vue 3 <a class="header-anchor" href="#behavior-differences-from-vue-3" aria-hidden="true">#</a></h3><p>The Composition API is backported using Vue 2&#39;s getter/setter-based reactivity system to ensure browser compatibility. This means there are some important behavior differences from Vue 3&#39;s proxy-based system:</p><ul><li><p>All <a href="https://v2.vuejs.org/v2/guide/reactivity.html#Change-Detection-Caveats" target="_blank" rel="noreferrer">Vue 2 change detection caveats</a> still apply.</p></li><li><p><code>reactive()</code>, <code>ref()</code>, and <code>shallowReactive()</code> will directly convert original objects instead of creating proxies. This means:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// true in 2.7, false in 3.x</span></span>
<span class="line"><span style="color:#82AAFF;">reactive</span><span style="color:#A6ACCD;">(foo) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> foo</span></span>
<span class="line"></span></code></pre></div></li><li><p><code>readonly()</code> <strong>does</strong> create a separate object, but it won&#39;t track newly added properties and does not work on arrays.</p></li><li><p>Avoid using arrays as root values in <code>reactive()</code> because without property access the array&#39;s mutation won&#39;t be tracked (this will result in a warning).</p></li><li><p>Reactivity APIs ignore properties with symbol keys.</p></li></ul><p>In addition, the following features are explicitly <strong>NOT</strong> ported:</p><ul><li>‚ùå <code>createApp()</code> (Vue 2 doesn&#39;t have isolated app scope)</li><li>‚ùå Top-level <code>await</code> in <code>&lt;script setup&gt;</code> (Vue 2 does not support async component initialization)</li><li>‚ùå TypeScript syntax in template expressions (incompatible w/ Vue 2 parser)</li><li>‚ùå Reactivity transform (still experimental)</li><li>‚ùå <code>expose</code> option is not supported for options components (but <code>defineExpose()</code> is supported in <code>&lt;script setup&gt;</code>).</li></ul><h2 id="upgrade-guide" tabindex="-1">Upgrade Guide <a class="header-anchor" href="#upgrade-guide" aria-hidden="true">#</a></h2><h3 id="vue-cli-webpack" tabindex="-1">Vue CLI / webpack <a class="header-anchor" href="#vue-cli-webpack" aria-hidden="true">#</a></h3><ol><li><p>Upgrade local <code>@vue/cli-xxx</code> dependencies the latest version in your major version range (if applicable):</p><ul><li><code>~4.5.18</code> for v4</li><li><code>~5.0.6</code> for v5</li></ul></li><li><p>Upgrade <code>vue</code> to <code>^2.7.0</code>. You can also remove <code>vue-template-compiler</code> from the dependencies - it is no longer needed in 2.7.</p><p>Note: if you are using <code>@vue/test-utils</code>, you will need to keep <code>vue-template-compiler</code> in the dependencies because test utils rely on some APIs only exposed in this package.</p></li><li><p>Check your package manager lockfile to ensure the following dependencies meet the version requirements. They may be transitive dependencies not listed in <code>package.json</code>.</p><ul><li><code>vue-loader</code>: <code>^15.10.0</code></li><li><code>vue-demi</code>: <code>^0.13.1</code></li></ul><p>If not, you will need to remove <code>node_modules</code> and the lockfile and perform a fresh install to ensure they are bumped to the latest version.</p></li><li><p>If you were previously using <a href="https://github.com/vuejs/composition-api" target="_blank" rel="noreferrer"><code>@vue/composition-api</code></a>, update imports from it to <code>vue</code> instead. Note that some APIs exported by the plugin, e.g. <code>createApp</code>, are not ported in 2.7.</p></li><li><p>Update <code>eslint-plugin-vue</code> to latest version (9+) if you run into unused variable lint errors when using <code>&lt;script setup&gt;</code>.</p></li><li><p>The SFC compiler for 2.7 now uses PostCSS 8 (upgraded from 7). PostCSS 8 should be backwards compatible with most plugins, but the upgrade <strong>may</strong> cause issues if you were previously using a custom PostCSS plugin that can only work with PostCSS 7. In such cases, you will need to upgrade the relevant plugins to their PostCSS 8 compatible versions.</p></li></ol><h3 id="vite" tabindex="-1">Vite <a class="header-anchor" href="#vite" aria-hidden="true">#</a></h3><p>2.7 support for Vite is provided via a new plugin: <a href="https://github.com/vitejs/vite-plugin-vue2" target="_blank" rel="noreferrer">@vitejs/plugin-vue2</a>. This new plugin requires Vue 2.7 or above and supersedes the existing <a href="https://github.com/underfin/vite-plugin-vue2" target="_blank" rel="noreferrer">vite-plugin-vue2</a>.</p><p>Note that the new plugin does not handle Vue-specific JSX / TSX transform, which is intentional. Vue 2 JSX / TSX transform for Vite is handled in a separate, dedicated plugin: <a href="https://github.com/vitejs/vite-plugin-vue2-jsx" target="_blank" rel="noreferrer">@vitejs/plugin-vue2-jsx</a>.</p><h3 id="volar-compatibility" tabindex="-1">Volar Compatibility <a class="header-anchor" href="#volar-compatibility" aria-hidden="true">#</a></h3><p>2.7 ships improved type definitions so it is no longer necessary to install <code>@vue/runtime-dom</code> just for Volar template type inference support. All you need now is the following config in <code>tsconfig.json</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">vueCompilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.7</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="devtools-support" tabindex="-1">Devtools Support <a class="header-anchor" href="#devtools-support" aria-hidden="true">#</a></h3><p>Vue Devtools 6.2.0 has added support for inspecting 2.7 Composition API state, but the extensions may still need a few days to go through review on respective publishing platforms.</p><h2 id="implications-of-the-2-7-release" tabindex="-1">Implications of the 2.7 Release <a class="header-anchor" href="#implications-of-the-2-7-release" aria-hidden="true">#</a></h2><p>As stated before, 2.7 is the final minor release of Vue 2.x. After this release, Vue 2 has entered LTS (long-term support) which lasts for 18 months from now, and will no longer receive new features.</p><p>This means <strong>Vue 2 will reach End of Life by the end of 2023</strong>. We believe this should provide plenty of time for most of the ecosystem to migrate over to Vue 3. However, we also understand that there could be teams or projects that cannot upgrade by this timeline while still need to fullfil security and compliance requirements. We are planning to provide extended support for Vue 2 for teams with such needs - if your team expects to be using Vue 2 beyond end of 2023, make sure to plan head and register your interest <a href="https://airtable.com/shrj37Zf4ZIfrxFzh" target="_blank" rel="noreferrer">here</a>.</p><h2 id="extra-details" tabindex="-1">Extra Details <a class="header-anchor" href="#extra-details" aria-hidden="true">#</a></h2><p>In preparation of this release, we ported the Vue 2 codebase from Flow to TypeScript, building upon the heroic effort by core team member <a href="https://github.com/pikax" target="_blank" rel="noreferrer">@pikax</a>. This made it much easier for us to reuse code from Vue 3, and auto-generate type definitions for the ported APIs. We also moved the unit tests from Karma + Jasmine to <a href="https://vitest.dev/" target="_blank" rel="noreferrer">Vitest</a>, resulting in greatly improved maintenance DX and CI stability.</p><p>We would also like to express our appreciation towards prior community efforts that bridged the gap before 2.7 was available:</p><ul><li><code>@vue/composition-api</code> plugin by <a href="https://github.com/liximomo" target="_blank" rel="noreferrer">@liximomo</a></li><li><code>vue-demi</code> by <a href="https://github.com/antfu" target="_blank" rel="noreferrer">@antfu</a></li><li><code>vite-plugin-vue2</code> by <a href="https://github.com/underfin" target="_blank" rel="noreferrer">@underfin</a></li></ul></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Vue 2.7 is Now in Beta]]></title>
            <link>https://blog.vuejs.org/posts/vue-2-7-beta.html</link>
            <guid>https://blog.vuejs.org/posts/vue-2-7-beta.html</guid>
            <pubDate>Mon, 20 Jun 2022 12:00:00 GMT</pubDate>
            <description><![CDATA[<p>We are happy to announce that Vue 2.7 is now in beta.</p>
]]></description>
            <content:encoded><![CDATA[<div><p>We are happy to announce that Vue 2.7 is now in beta.</p><hr><p>Despite Vue 3 now being the default version, we understand that there are still many users who have to stay on Vue 2 due to dependency compatibility, browser support requirements, or simply not enough bandwidth to upgrade. In Vue 2.7, we have backported some of the most important features from Vue 3 so that Vue 2 users can benefit from them as well.</p><h2 id="backported-features" tabindex="-1">Backported Features <a class="header-anchor" href="#backported-features" aria-hidden="true">#</a></h2><ul><li><a href="https://vuejs.org/guide/extras/composition-api-faq.html" target="_blank" rel="noreferrer">Composition API</a></li><li>SFC <a href="https://vuejs.org/api/sfc-script-setup.html" target="_blank" rel="noreferrer"><code>&lt;script setup&gt;</code></a></li><li>SFC <a href="https://vuejs.org/api/sfc-css-features.html#v-bind-in-css" target="_blank" rel="noreferrer">CSS v-bind</a></li></ul><p>In addition, the following APIs are also supported:</p><ul><li><p><code>defineComponent()</code> with improved type inference (compared to <code>Vue.extend</code>)</p></li><li><p><code>h()</code>, <code>useSlot()</code>, <code>useAttrs()</code>, <code>useCssModules()</code></p></li><li><p><code>set()</code>, <code>del()</code> and <code>nextTick()</code> are also provided as named exports in ESM builds.</p></li><li><p>The <code>emits</code> option is also supported, but only for type-checking purposes (does not affect runtime behavior)</p><p>2.7 also supports using ESNext syntax in template expressions. When using a build system, the compiled template render function will go through the same loaders / plugins configured for normal JavaScript. This means if you have configured Babel for <code>.js</code> files, it will also apply to the expressions in your SFC templates.</p></li></ul><h3 id="notes-on-api-exposure" tabindex="-1">Notes on API exposure <a class="header-anchor" href="#notes-on-api-exposure" aria-hidden="true">#</a></h3><ul><li><p>In ESM builds, these APIs are provided as named exports (and named exports only):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> Vue</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ref</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ref </span><span style="color:#676E95;">// undefined, use named export instead</span></span>
<span class="line"></span></code></pre></div></li><li><p>In UMD and CJS builds, these APIs are exposed as properties on the global <code>Vue</code> object.</p></li><li><p>When bundling with CJS builds externalized, bundlers should be able to handle ESM interop when externalizing CJS builds.</p></li></ul><h3 id="behavior-differences-from-vue-3" tabindex="-1">Behavior Differences from Vue 3 <a class="header-anchor" href="#behavior-differences-from-vue-3" aria-hidden="true">#</a></h3><p>The Composition API is backported using Vue 2&#39;s getter/setter-based reactivity system to ensure browser compatibility. This means there are some important behavior differences from Vue 3&#39;s proxy-based system:</p><ul><li><p>All <a href="https://v2.vuejs.org/v2/guide/reactivity.html#Change-Detection-Caveats" target="_blank" rel="noreferrer">Vue 2 change detection caveats</a> still apply.</p></li><li><p><code>reactive()</code>, <code>ref()</code>, and <code>shallowReactive()</code> will directly convert original objects instead of creating proxies. This means:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// true in 2.7, false in 3.x</span></span>
<span class="line"><span style="color:#82AAFF;">reactive</span><span style="color:#A6ACCD;">(foo) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> foo</span></span>
<span class="line"></span></code></pre></div></li><li><p><code>readonly()</code> <strong>does</strong> create a separate object, but it won&#39;t track newly added properties and does not work on arrays.</p></li><li><p>Avoid using arrays as root values in <code>reactive()</code> because without property access the array&#39;s mutation won&#39;t be tracked (this will result in a warning).</p></li><li><p>Reactivity APIs ignore properties with symbol keys.</p></li></ul><p>In addition, the following features are explicitly <strong>NOT</strong> ported:</p><ul><li>‚ùå <code>createApp()</code> (Vue 2 doesn&#39;t have isolated app scope)</li><li>‚ùå Top-level <code>await</code> in <code>&lt;script setup&gt;</code> (Vue 2 does not support async component initialization)</li><li>‚ùå TypeScript syntax in template expressions (incompatible w/ Vue 2 parser)</li><li>‚ùå Reactivity transform (still experimental)</li><li>‚ùå <code>expose</code> option is not supported for options components (but <code>defineExpose()</code> is supported in <code>&lt;script setup&gt;</code>).</li></ul><h2 id="beta-adoption-guide" tabindex="-1">Beta Adoption Guide <a class="header-anchor" href="#beta-adoption-guide" aria-hidden="true">#</a></h2><p>2.7 is currently in beta stage and may still have rough edges. Please help us test its stability by opting into the beta. Here&#39;s how:</p><h3 id="vue-cli" tabindex="-1">Vue CLI <a class="header-anchor" href="#vue-cli" aria-hidden="true">#</a></h3><ol><li><p>Upgrade local <code>@vue/cli-xxx</code> dependencies the latest version in your major version range:</p><ul><li><code>~4.5.18</code> for v4</li><li><code>~5.0.6</code> for v5</li></ul></li><li><p>Upgrade <code>vue</code> to <code>v2-beta</code>, or pin to a specific version (latest beta as of this writing is <code>2.7.0-beta.3</code>). You can also remove <code>vue-template-compiler</code> from the dependencies - it is no longer needed in 2.7.</p></li><li><p>If you were previously using <a href="https://github.com/vuejs/composition-api" target="_blank" rel="noreferrer"><code>@vue/composition-api</code></a>, update imports from it to <code>vue</code> instead.</p></li><li><p>Opt-in to <code>vue-loader</code> v15 beta. Since <code>vue-loader</code> is a transitive dependency of <code>@vue/cli-service</code>, you will need to force your package manager to explicitly use the beta version. The forced resolution will no longer be necessary when it goes stable.</p><ul><li><p>For <code>npm</code> (&gt;=8.3.0), use the <a href="https://docs.npmjs.com/cli/v8/configuring-npm/package-json#overrides" target="_blank" rel="noreferrer">overrides</a> field in <code>package.json</code>.</p><p>If using Vue CLI v4:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">overrides</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">vue-loader</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^15.10.0-beta.6</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>If using Vue CLI v5:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">overrides</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">@vue/vue-loader-v15</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm:vue-loader@^15.10.0-beta.6</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>For <code>yarn</code>, use the <a href="https://classic.yarnpkg.com/lang/en/docs/selective-version-resolutions/" target="_blank" rel="noreferrer">resolutions</a> field in <code>package.json</code>.</p><p>If using Vue CLI v4:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">resolutions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">vue-loader</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^15.10.0-beta.6</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>If using Vue CLI v5:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">resolutions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">@vue/vue-loader-v15</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm:vue-loader@^15.10.0-beta.6</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>For <code>pnpm</code>, use <a href="https://pnpm.io/package_json#pnpmoverrides" target="_blank" rel="noreferrer">pnpm.overrides</a>:</p><p>If using Vue CLI v4:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">pnpm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">overrides</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">vue-loader</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^15.10.0-beta.6</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>If using Vue CLI v5:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">pnpm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">overrides</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">@vue/vue-loader-v15</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm:vue-loader@^15.10.0-beta.6</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li></ul></li><li><p>If you were previously using any libraries that rely on <a href="https://github.com/vueuse/vue-demi" target="_blank" rel="noreferrer"><code>vue-demi</code></a> (e.g. VueUse or Pinia), you may need to remove lockfile and do a fresh npm install to upgrade to the latest version of <code>vue-demi</code>.</p></li><li><p>The SFC compiler for 2.7 now uses PostCSS 8 (upgraded from 7). PostCSS 8 should be backwards compatible with most plugins, but the upgrade <strong>may</strong> cause issues if you were previously using a custom PostCSS plugin that can only work with PostCSS 7. In such cases, you will need to upgrade the relevant plugins to their PostCSS 8 compatible versions.</p></li></ol><h3 id="vite" tabindex="-1">Vite <a class="header-anchor" href="#vite" aria-hidden="true">#</a></h3><p>2.7 support for Vite is provided via a new plugin: <a href="https://github.com/vitejs/vite-plugin-vue2" target="_blank" rel="noreferrer">@vitejs/plugin-vue2</a>. This new plugin requires Vue 2.7 or above and supersedes the existing <a href="https://github.com/underfin/vite-plugin-vue2" target="_blank" rel="noreferrer">vite-plugin-vue2</a>.</p><p>Note that the new plugin does not handle Vue-specific JSX / TSX transform, which is intentional. Vue 2 JSX / TSX transform should be handled in a separate, dedicated plugin.</p><h3 id="volar-compatibility" tabindex="-1">Volar Compatibility <a class="header-anchor" href="#volar-compatibility" aria-hidden="true">#</a></h3><p>2.7 ships improved type definitions so it is no longer necessary to install <code>@vue/runtime-dom</code> just for Volar template type inference support. All you need now is the following config in <code>tsconfig.json</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">vueCompilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.7</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="implications-of-the-2-7-release" tabindex="-1">Implications of the 2.7 Release <a class="header-anchor" href="#implications-of-the-2-7-release" aria-hidden="true">#</a></h2><p>2.7 stable is scheduled to land around end of June 2022. As stated before, it will be the final minor release of Vue 2.x. Once 2.7 is released as stable, Vue 2 will no longer receive new features, and will enter LTS (long-term support) which lasts for 18 months.</p><p>This means <strong>Vue 2 will reach End of Life by the end of 2023</strong>. We believe this should provide plenty of time for most of the ecosystem to migrate over to Vue 3. However, we also understand that there could be teams or projects that cannot upgrade by this timeline while still need to fullfil security and compliance requirements. We are planning to provide extended support for Vue 2 for teams with such needs - if your team expects to be using Vue 2 beyond end of 2023, make sure to plan head and register your interest <a href="https://airtable.com/shrj37Zf4ZIfrxFzh" target="_blank" rel="noreferrer">here</a>.</p></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Vue 3 as the New Default]]></title>
            <link>https://blog.vuejs.org/posts/vue-3-as-the-new-default.html</link>
            <guid>https://blog.vuejs.org/posts/vue-3-as-the-new-default.html</guid>
            <pubDate>Thu, 20 Jan 2022 12:00:00 GMT</pubDate>
            <description><![CDATA[<p>TL;DR: Vue 3 is now the new default version as of <strong>Monday, February 7, 2022</strong>!</p>
<p>Make sure to read the <a href="/posts/vue-3-as-the-new-default.html#potential-required-actions">Potential Required Actions</a> section to see if you need to make certain changes before the switch to avoid breakage.</p>
]]></description>
            <content:encoded><![CDATA[<div><p>TL;DR: Vue 3 is now the new default version as of <strong>Monday, February 7, 2022</strong>!</p><p>Make sure to read the <a href="/posts/vue-3-as-the-new-default.html#potential-required-actions">Potential Required Actions</a> section to see if you need to make certain changes before the switch to avoid breakage.</p><hr><h2 id="from-a-library-to-a-framework" tabindex="-1">From a Library to a Framework <a class="header-anchor" href="#from-a-library-to-a-framework" aria-hidden="true">#</a></h2><p>When Vue first started, it was just a runtime library. Over the years, it has evolved into a framework that encompasses many sub projects:</p><ul><li>The core library, i.e. the <code>vue</code> npm package</li><li>The documentation, with enough content to be considered a book</li><li>The build toolchain, i.e. Vue CLI, vue-loader and other supporting packages</li><li>Vue Router for building SPA</li><li>Vuex for state management</li><li>Browser devtools extension for debugging and profiling</li><li>Vetur, the VSCode extension for Single-File Component IDE support</li><li>ESLint plugin for static style / error checking</li><li>Vue Test Utils for component testing</li><li>Custom JSX transforms that leverages Vue&#39;s runtime features</li><li>VuePress for Vue-based static site generation</li></ul><p>This is only possible because Vue is a community-driven project. Many of these projects were started by community members who later became Vue team members. The rest were originally started by me, but are now almost entirely maintained by the team (with the exception of the core library).</p><h2 id="soft-launch-of-vue-3" tabindex="-1">Soft Launch of Vue 3 <a class="header-anchor" href="#soft-launch-of-vue-3" aria-hidden="true">#</a></h2><p>With the core releasing a new major version, all the other parts of the framework needed to move forward together. We also needed to provide a migration path for Vue 2 users. This was a massive undertaking for a community-drive team like Vue. When Vue 3 core was ready, most other parts of the framework were either in beta or still awaiting update. We decided to go ahead and release the core so that the early adopters, library authors and higher-level frameworks can start building with it while we worked on the rest of the framework.</p><p>At the same time, we kept Vue 2 as the default for documentation and npm installs. This is because we knew that for many users, Vue 2 still provided a more coherent and comprehensive experience until other parts of Vue 3 are refined.</p><h2 id="the-new-vue" tabindex="-1">The New Vue <a class="header-anchor" href="#the-new-vue" aria-hidden="true">#</a></h2><p>This soft launch process took longer than we hoped, but we are finally here: we are excited to announce that Vue 3 will become the new default version on <strong>Monday, February 7, 2022</strong>.</p><p>Outside of Vue core, we have improved almost every aspect of the framework:</p><ul><li>Blazing fast, <a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite</a>-powered build toolchain</li><li>More ergonomic Composition API syntax via <code>&lt;script setup&gt;</code></li><li>Improved TypeScript IDE support for Single File Components via <a href="https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.volar" target="_blank" rel="noreferrer">Volar</a></li><li>Command line type checking for SFCs via <a href="https://github.com/johnsoncodehk/volar/tree/master/packages/vue-tsc" target="_blank" rel="noreferrer">vue-tsc</a></li><li>Simpler state management via <a href="https://pinia.vuejs.org/" target="_blank" rel="noreferrer">Pinia</a></li><li>New devtools extension with simultaneous Vue 2 / Vue 3 support and a <a href="https://devtools.vuejs.org/plugin/plugins-guide.html" target="_blank" rel="noreferrer">plugin system</a> that allows community libraries to hook into the devtools panels</li></ul><p>We also completely reworked the main documentation. <a href="https://staging.vuejs.org" target="_blank" rel="noreferrer">The new vuejs.org</a> (currently in staging) will provide updated framework overview and recommendations, flexible learning paths for users from different backgrounds, the ability to toggle between Options API and Composition API throughout the guide and examples, and many new deep dive sections. It&#39;s also <em>very</em> fast - which we will discuss in more details in a separate blog post soon.</p><h2 id="version-switch-details" tabindex="-1">Version Switch Details <a class="header-anchor" href="#version-switch-details" aria-hidden="true">#</a></h2><p>Here are the details on what we mean by &quot;the new default&quot;. In addition, please read the <a href="#potential-required-actions">Potential Required Actions</a> section to see if you need to make certain changes before the switch to avoid breakage.</p><h3 id="npm-dist-tags" tabindex="-1">npm dist tags <a class="header-anchor" href="#npm-dist-tags" aria-hidden="true">#</a></h3><ul><li><p><code>npm install vue</code> now installs Vue 3 by default.</p></li><li><p>The <code>latest</code> dist tag of all other official npm packages now point to Vue 3 compatible versions, including <code>vue-router</code>, <code>vuex</code>, <code>vue-loader</code>, and <code>@vue/test-utils</code>.</p></li></ul><h3 id="official-docs-and-sites" tabindex="-1">Official docs and sites <a class="header-anchor" href="#official-docs-and-sites" aria-hidden="true">#</a></h3><p>All documentation and official sites now default to Vue 3 versions. These include:</p><ul><li><a href="http://vuejs.org" target="_blank" rel="noreferrer">vuejs.org</a></li><li><a href="http://router.vuejs.org" target="_blank" rel="noreferrer">router.vuejs.org</a></li><li><a href="http://vuex.vuejs.org" target="_blank" rel="noreferrer">vuex.vuejs.org</a></li><li><a href="http://vue-test-utils.vuejs.org" target="_blank" rel="noreferrer">vue-test-utils.vuejs.org</a> (moved to <a href="http://test-utils.vuejs.org" target="_blank" rel="noreferrer">test-utils.vuejs.org</a>)</li><li><a href="http://template-explorer.vuejs.org" target="_blank" rel="noreferrer">template-explorer.vuejs.org</a></li></ul><p>The current Vue 2 versions of these sites have been moved to new addresses (the version prefixes indicate the libraries&#39; respective versions, not Vue core&#39;s):</p><ul><li><a href="http://vuejs.org" target="_blank" rel="noreferrer">vuejs.org</a> -&gt; <a href="http://v2.vuejs.org" target="_blank" rel="noreferrer">v2.vuejs.org</a> (old v2 URLs will auto redirect to the new address)</li><li><a href="http://router.vuejs.org" target="_blank" rel="noreferrer">router.vuejs.org</a> -&gt; <a href="http://v3.router.vuejs.org" target="_blank" rel="noreferrer">v3.router.vuejs.org</a></li><li><a href="http://vuex.vuejs.org" target="_blank" rel="noreferrer">vuex.vuejs.org</a> -&gt; <a href="http://v3.vuex.vuejs.org" target="_blank" rel="noreferrer">v3.vuex.vuejs.org</a></li><li><a href="http://vue-test-utils.vuejs.org" target="_blank" rel="noreferrer">vue-test-utils.vuejs.org</a> -&gt; <a href="http://v1.test-utils.vuejs.org" target="_blank" rel="noreferrer">v1.test-utils.vuejs.org</a></li><li><a href="http://template-explorer.vuejs.org" target="_blank" rel="noreferrer">template-explorer.vuejs.org</a> -&gt; <a href="http://v2.template-explorer.vuejs.org" target="_blank" rel="noreferrer">v2.template-explorer.vuejs.org</a></li></ul><h3 id="github-repos" tabindex="-1">GitHub repos <a class="header-anchor" href="#github-repos" aria-hidden="true">#</a></h3><p>All GitHub repos under the <code>vuejs</code> organization have switched to Vue 3 versions in the default branch. In addition, we have renamed the following repos to remove <code>next</code> in their names:</p><ul><li><code>vuejs/vue-next</code> -&gt; <a href="https://github.com/vuejs/core" target="_blank" rel="noreferrer"><code>vuejs/core</code></a></li><li><code>vuejs/vue-router-next</code> -&gt; <a href="https://github.com/vuejs/router" target="_blank" rel="noreferrer"><code>vuejs/router</code></a></li><li><code>vuejs/docs-next</code> -&gt; <a href="https://github.com/vuejs/docs" target="_blank" rel="noreferrer"><code>vuejs/docs</code></a></li><li><code>vuejs/vue-test-utils-next</code> -&gt; <a href="https://github.com/vuejs/test-utils" target="_blank" rel="noreferrer"><code>vuejs/test-utils</code></a></li><li><code>vuejs/jsx-next</code> -&gt; <a href="https://github.com/vuejs/babel-plugin-jsx" target="_blank" rel="noreferrer"><code>vuejs/babel-plugin-jsx</code></a></li></ul><p>Translation repos for the main documentation are moved to the <a href="https://github.com/vuejs-translations" target="_blank" rel="noreferrer"><code>vuejs-translations</code> organization</a>.</p><p>GitHub handles repo directs automatically, so previous links to source code and issues should still work.</p><h3 id="devtools-extension" tabindex="-1">Devtools extension <a class="header-anchor" href="#devtools-extension" aria-hidden="true">#</a></h3><p>Devtools v6, which was previously published under the <a href="https://chrome.google.com/webstore/detail/vuejs-devtools/ljjemllljcmogpfapbkkighbhhppjdbg" target="_blank" rel="noreferrer">beta channel</a> on Chrome Web Store, is now published under the <a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd" target="_blank" rel="noreferrer">stable channel</a>.</p><p>The previous version of the devtools extension is still be available and has been moved to the <a href="https://chrome.google.com/webstore/detail/vuejs-devtools/iaajmlceplecbljialhhkmedjlpdblhp" target="_blank" rel="noreferrer">legacy channel</a>.</p><h2 id="potential-required-actions" tabindex="-1">Potential Required Actions <a class="header-anchor" href="#potential-required-actions" aria-hidden="true">#</a></h2><h3 id="unversioned-cdn-usage" tabindex="-1">Unversioned CDN Usage <a class="header-anchor" href="#unversioned-cdn-usage" aria-hidden="true">#</a></h3><p>If you are using Vue 2 via a CDN link without specifying a version, make sure to specify a version range via <code>@2</code>:</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> &lt;script src=&quot;https://unpkg.com/vue&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;"> &lt;script src=&quot;https://unpkg.com/vue@2&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;"> &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.min.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"></span></code></pre></div><p>Note: even if using Vue 3, you should also always specify a version range in production to avoid accidentally loading future major versions.</p><h3 id="npm-latest-tag" tabindex="-1">NPM <code>latest</code> Tag <a class="header-anchor" href="#npm-latest-tag" aria-hidden="true">#</a></h3><p>If you are installing Vue or other official libraries from npm using the <code>latest</code> tag or <code>*</code>, please update to explicitly use Vue 2 compatible versions:</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;dependencies&quot;: {</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">   &quot;vue&quot;: &quot;latest&quot;,</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">   &quot;vue&quot;: &quot;^2.6.14&quot;,</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">   &quot;vue-router&quot;: &quot;latest&quot;,</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">   &quot;vue-router&quot;: &quot;^3.5.3&quot;,</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">   &quot;vuex&quot;: &quot;latest&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">   &quot;vuex&quot;: &quot;^3.6.2&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  },</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;devDependencies&quot;: {</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">   &quot;vue-loader&quot;: &quot;latest&quot;,</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">   &quot;vue-loader&quot;: &quot;^15.9.8&quot;,</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">   &quot;@vue/test-utils&quot;: &quot;latest&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">   &quot;@vue/test-utils&quot;: &quot;^1.3.0&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Vue 3.2 Released!]]></title>
            <link>https://blog.vuejs.org/posts/vue-3.2.html</link>
            <guid>https://blog.vuejs.org/posts/vue-3.2.html</guid>
            <pubDate>Thu, 05 Aug 2021 12:00:00 GMT</pubDate>
            <description><![CDATA[<p>We are excited to announce the release of Vue.js 3.2 &quot;Quintessential Quintuplets&quot;! This release includes many significant new features and performance improvements, and contains no breaking changes.</p>
]]></description>
            <content:encoded><![CDATA[<div><p>We are excited to announce the release of Vue.js 3.2 &quot;Quintessential Quintuplets&quot;! This release includes many significant new features and performance improvements, and contains no breaking changes.</p><hr><h2 id="new-sfc-features" tabindex="-1">New SFC Features <a class="header-anchor" href="#new-sfc-features" aria-hidden="true">#</a></h2><p>Two new features for Single File Components (SFCs, aka <code>.vue</code> files) have graduated from experimental status and are now considered stable:</p><ul><li><p><code>&lt;script setup&gt;</code> is a compile-time syntactic sugar that greatly improves the ergonomics when using Composition API inside SFCs.</p></li><li><p><code>&lt;style&gt; v-bind</code> enables component state-driven dynamic CSS values in SFC <code>&lt;style&gt;</code> tags.</p></li></ul><p>Here is an example component using these two new features together:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ref</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> color </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;"> = </span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;"> === </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> ? </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> : </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    Color is: </span><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> color </span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">button</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> v-bind(color)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>Try it out in the <a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSdcblxuY29uc3QgY29sb3IgPSByZWYoJ3JlZCcpXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8YnV0dG9uIEBjbGljaz1cImNvbG9yID0gY29sb3IgPT09ICdyZWQnID8gJ2dyZWVuJyA6ICdyZWQnXCI+XG4gICAgQ29sb3IgaXM6IHt7IGNvbG9yIH19XG4gIDwvYnV0dG9uPlxuPC90ZW1wbGF0ZT5cblxuPHN0eWxlIHNjb3BlZD5cbmJ1dHRvbiB7XG4gIGNvbG9yOiB2LWJpbmQoY29sb3IpO1xufVxuPC9zdHlsZT4ifQ==" target="_blank" rel="noreferrer">SFC Playground</a>, or read their respective documentations:</p><ul><li><a href="https://v3.vuejs.org/api/sfc-script-setup.html" target="_blank" rel="noreferrer"><code>&lt;script setup&gt;</code></a></li><li><a href="https://v3.vuejs.org/api/sfc-style.html#state-driven-dynamic-css" target="_blank" rel="noreferrer"><code>&lt;style&gt; v-bind</code></a></li></ul><p>Building on top of <code>&lt;script setup&gt;</code>, we also have a new RFC for improving the ergonomics of ref usage with compiler-enabled sugar - please share your feedback <a href="https://github.com/vuejs/rfcs/discussions/369" target="_blank" rel="noreferrer">here</a>.</p><h2 id="web-components" tabindex="-1">Web Components <a class="header-anchor" href="#web-components" aria-hidden="true">#</a></h2><p>Vue 3.2 introduces a new <code>defineCustomElement</code> method for easily creating native <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements" target="_blank" rel="noreferrer">custom elements</a> using Vue component APIs:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineCustomElement</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> MyVueElement </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineCustomElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// normal Vue component options here</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Register the custom element.</span></span>
<span class="line"><span style="color:#676E95;">// After registration, all `&lt;my-vue-element&gt;` tags</span></span>
<span class="line"><span style="color:#676E95;">// on the page will be upgraded.</span></span>
<span class="line"><span style="color:#A6ACCD;">customElements</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">define</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my-vue-element</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MyVueElement)</span></span>
<span class="line"></span></code></pre></div><p>This API allows developers to create Vue-powered UI component libraries that can be used with any framework, or no framework at all. We have also added a new section in our docs on <a href="https://v3.vuejs.org/guide/web-components.html" target="_blank" rel="noreferrer">consuming and creating Web Components in Vue</a>.</p><h2 id="performance-improvements" tabindex="-1">Performance Improvements <a class="header-anchor" href="#performance-improvements" aria-hidden="true">#</a></h2><p>3.2 includes some significant performance improvements to Vue&#39;s reactivity system, thanks to the great work by <a href="https://github.com/basvanmeurs" target="_blank" rel="noreferrer">@basvanmeurs</a>. Specifically:</p><ul><li><a href="https://github.com/vuejs/vue-next/pull/3995" target="_blank" rel="noreferrer">More efficient ref implementation (~260% faster read / ~50% faster write)</a></li><li><a href="https://github.com/vuejs/vue-next/pull/4017" target="_blank" rel="noreferrer">~40% faster dependency tracking</a></li><li><a href="https://github.com/vuejs/vue-next/pull/4001" target="_blank" rel="noreferrer">~17% less memory usage</a></li></ul><p>The template compiler also received a number of improvements:</p><ul><li><a href="https://github.com/vuejs/vue-next/pull/3334" target="_blank" rel="noreferrer">~200% faster creation of plain element VNodes</a></li><li>More aggressive constant hoisting [<a href="https://github.com/vuejs/vue-next/commit/b7ea7c148552874e8bce399eec9fbe565efa2f4d" target="_blank" rel="noreferrer">1</a>] [<a href="https://github.com/vuejs/vue-next/commit/02339b67d8c6fab6ee701a7c4f2773139ed007f5" target="_blank" rel="noreferrer">2</a>]</li></ul><p>Finally, there is a new <a href="https://v3.vuejs.org/api/directives.html#v-memo" target="_blank" rel="noreferrer"><code>v-memo</code> directive</a> that provides the ability to memoize part of the template tree. A <code>v-memo</code> hit allows Vue to skip not only the Virtual DOM diffing, but the creation of new VNodes altogether. Although rarely needed, it provides an escape hatch to squeeze out maximum performance in certain scenarios, for example large <code>v-for</code> lists.</p><p>The usage of <code>v-memo</code>, which is a one-line addition, places Vue among the fastest mainstream frameworks in <a href="https://github.com/krausest/js-framework-benchmark" target="_blank" rel="noreferrer">js-framework-benchmark</a>:</p><p><img src="/bench.png" alt="benchmark"></p><h2 id="server-side-rendering" tabindex="-1">Server-side Rendering <a class="header-anchor" href="#server-side-rendering" aria-hidden="true">#</a></h2><p>The <code>@vue/server-renderer</code> package in 3.2 now ships an ES module build which is also decoupled from Node.js built-ins. This makes it possible to bundle and leverage <code>@vue/server-renderer</code> for use inside non-Node.js runtimes such as <a href="https://developers.cloudflare.com/workers/" target="_blank" rel="noreferrer">CloudFlare Workers</a> or Service Workers.</p><p>We also improved the streaming render APIs, with new methods for rendering to the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API" target="_blank" rel="noreferrer">Web Streams API</a>. Check out the <a href="https://github.com/vuejs/vue-next/tree/master/packages/server-renderer#streaming-api" target="_blank" rel="noreferrer">documentation of <code>@vue/server-renderer</code></a> for more details.</p><h2 id="effect-scope-api" tabindex="-1">Effect Scope API <a class="header-anchor" href="#effect-scope-api" aria-hidden="true">#</a></h2><p>3.2 introduces a new <a href="https://v3.vuejs.org/api/effect-scope.html" target="_blank" rel="noreferrer">Effect Scope API</a> for directly controlling the disposal timing of reactive effects (computed and watchers). It makes it easier to leverage Vue&#39;s reactivity API out of a component context, and also unlocks some advanced use cases inside components.</p><p>This is low-level API largely intended for library authors, so it&#39;s recommended to read the feature&#39;s <a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0041-reactivity-effect-scope.md" target="_blank" rel="noreferrer">RFC</a> for the motivation and use cases of this feature.</p><hr><p>For a detailed list of all changes in 3.2, please refer to the <a href="https://github.com/vuejs/vue-next/blob/master/CHANGELOG.md" target="_blank" rel="noreferrer">full changelog</a>.</p></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Reflections for 2020-2021]]></title>
            <link>https://blog.vuejs.org/posts/hello-2021.html</link>
            <guid>https://blog.vuejs.org/posts/hello-2021.html</guid>
            <pubDate>Mon, 11 Jan 2021 12:00:00 GMT</pubDate>
            <description><![CDATA[<p>With a new year upon us, we also have a new blog! In this post, we would like to take a look back at some of the highlights from 2020, as well as some ideas we have for 2021.</p>
]]></description>
            <content:encoded><![CDATA[<div><p>With a new year upon us, we also have a new blog! In this post, we would like to take a look back at some of the highlights from 2020, as well as some ideas we have for 2021.</p><hr><h2 id="looking-back-at-2020" tabindex="-1">Looking Back at 2020 <a class="header-anchor" href="#looking-back-at-2020" aria-hidden="true">#</a></h2><p>2020 has been a challenging year, to say the least. Nonetheless, the team has made the best of a difficult situation. Despite an already massive user base, Vue&#39;s <a href="https://npm-stat.com/charts.html?package=vue&amp;from=2020-01-01&amp;to=2020-12-31" target="_blank" rel="noreferrer">NPM downloads</a> and <a href="https://chrome-stats.com/d/nhdogjmejiglipccpnnnanhbledajbpd" target="_blank" rel="noreferrer">Devtools weekly active users</a> both grew close to 50% throughout 2020. As time of this writing, Vue is being downloaded ~8M times per month on NPM and the devtools extension has ~1.5M weekly active users.</p><p>Aside from routine maintenance, there are some incredible things that we accomplished as a team:</p><ul><li><a href="https://github.com/vuejs/vue-next/releases/tag/v3.0.0" target="_blank" rel="noreferrer">Shipped Vue 3 core</a></li><li><a href="https://v3.vuejs.org/" target="_blank" rel="noreferrer">Brand new docs site for Vue 3</a></li><li><a href="https://github.com/vuejs/vue-router-next/releases/tag/v4.0.0" target="_blank" rel="noreferrer">Vue Router 4</a></li><li><a href="https://next.vuex.vuejs.org/" target="_blank" rel="noreferrer">Vuex 4 (RC)</a></li><li><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/ljjemllljcmogpfapbkkighbhhppjdbg" target="_blank" rel="noreferrer">Vue DevTools 6.0 with Vue 3 support (Beta)</a></li><li><a href="https://vue-test-utils.vuejs.org/v2/guide/introduction.html" target="_blank" rel="noreferrer">Vue Test Utils 2 (Beta)</a></li></ul><p>In addition to iterating on the existing ecosystem, we also invested in exploring improvements on new frontiers:</p><ul><li>New Single File Component (SFC) feature proposals with the goal of leveraging the SFC compiler for more DX and performance wins: <ul><li><a href="https://github.com/vuejs/rfcs/pull/227" target="_blank" rel="noreferrer"><code>&lt;script setup&gt;</code></a></li><li><a href="https://github.com/vuejs/rfcs/pull/231" target="_blank" rel="noreferrer">CSS variables injection in <code>&lt;style&gt;</code></a></li></ul></li><li><a href="https://github.com/znck/vue-developer-experience" target="_blank" rel="noreferrer">VueDX</a> for providing better IDE integrations and development workflow</li><li><a href="http://vitejs.dev/" target="_blank" rel="noreferrer">Vite</a>, a new build tool built on top of modern standards</li><li><a href="https://vitepress.vuejs.org/" target="_blank" rel="noreferrer">VitePress</a>, a new static site generator built on Vue 3 and Vite</li></ul><p>In addition to all of these exciting projects, it‚Äôs also been incredible to see the community continue to grow despite the challenges 2020 set forth in terms of being unable to facilitate in-person events. With initiatives such as remote conferences, meetups and other events, it‚Äôs been a joy to see the community interacting in new ways that might not have been possible otherwise.</p><h2 id="looking-forward-to-2021" tabindex="-1">Looking Forward to 2021 <a class="header-anchor" href="#looking-forward-to-2021" aria-hidden="true">#</a></h2><p>While Vue 3 brings many fundamental improvements and opens up avenues for future iterations, we are still in a transition period - both in terms of the library ecosystem and best practices involving new APIs. For early 2021, our focus will be further stabilizing the Vue 3 ecosystem, and continuing to help the community through this transition period. Here is a non-exhaustive list of things we‚Äôre looking forward to:</p><ul><li>Stablize current RC/Beta sub projects</li><li>Finalize SFC proposals and further polish IDE support</li><li>Vue 3.1 (Q1, more details as we finalize the release plan)</li><li>Vue 2 ‚Üí 3 Migration Tools (estimated end of Q1)</li><li>Vue CLI 5 w/ webpack 5 support (estimated Q1)</li><li><s>Vue 3 IE 11 Compatibility Build (estimated Q2)</s></li><li>Vue 2.7 (estimated Q2/3)</li><li>SSR support in Vite</li><li>Vuex 5 (TBD)</li></ul><p>In addition, we are excited about other frameworks and libraries in the ecosystem making progress towards Vue 3 support. And of course, we can‚Äôt wait to see what new ideas and tools you all have as we embark on a new chapter in the Vue.js roadmap.</p></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Announcing Vue 3.0 "One Piece"]]></title>
            <link>https://blog.vuejs.org/posts/vue-3-one-piece.html</link>
            <guid>https://blog.vuejs.org/posts/vue-3-one-piece.html</guid>
            <pubDate>Fri, 18 Sep 2020 12:00:00 GMT</pubDate>
            <description><![CDATA[<p align="center">
  <img width="200" height="177px" src="https://user-images.githubusercontent.com/499550/93624428-53932780-f9ae-11ea-8d16-af949e16a09f.png" alt="one-piece-logo">
</p>
<p>Today we are proud to announce the official release of Vue.js 3.0 &quot;One Piece&quot;. This new major version of the framework provides improved performance, smaller bundle sizes, better TypeScript integration, new APIs for tackling large scale use cases, and a solid foundation for long-term future iterations of the framework.</p>
]]></description>
            <content:encoded><![CDATA[<div><p align="center"><img width="200" height="177px" src="https://user-images.githubusercontent.com/499550/93624428-53932780-f9ae-11ea-8d16-af949e16a09f.png" alt="one-piece-logo"></p><p>Today we are proud to announce the official release of Vue.js 3.0 &quot;One Piece&quot;. This new major version of the framework provides improved performance, smaller bundle sizes, better TypeScript integration, new APIs for tackling large scale use cases, and a solid foundation for long-term future iterations of the framework.</p><hr><p>The 3.0 release represents over 2 years of development efforts, featuring <a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs" target="_blank" rel="noreferrer">30+ RFCs</a>, 2,600+ commits, <a href="https://github.com/vuejs/vue-next/pulls?q=is%3Apr+is%3Amerged+-author%3Aapp%2Fdependabot-preview+" target="_blank" rel="noreferrer">628 pull requests</a> from <a href="https://github.com/vuejs/vue-next/graphs/contributors" target="_blank" rel="noreferrer">99 contributors</a>, plus tremendous amount of development and documentation work outside of the core repo. We would like to express our deepest gratitude towards our team members for taking on this challenge, our contributors for the pull requests, our <a href="https://github.com/vuejs/vue/blob/dev/BACKERS.md" target="_blank" rel="noreferrer">sponsors and backers</a> for the financial support, and the wider community for participating in our design discussions and providing feedback for the pre-release versions. Vue is an independent project created for the community and sustained by the community, and Vue 3.0 wouldn&#39;t have been possible without your consistent support.</p><h2 id="taking-the-progressive-framework-concept-further" tabindex="-1">Taking the &quot;Progressive Framework&quot; Concept Further <a class="header-anchor" href="#taking-the-progressive-framework-concept-further" aria-hidden="true">#</a></h2><p>Vue had a simple mission from its humble beginning: to be an approachable framework that anyone can quickly learn. As our user base grew, the framework also grew in scope to adapt to the increasing demands. Over time, it evolved into what we call a &quot;Progressive Framework&quot;: a framework that can be learned and adopted incrementally, while providing continued support as the user tackles more and more demanding scenarios.</p><p>Today, with over 1.3 million users worldwide<sup>*</sup>, we are seeing Vue being used in a wildly diverse range of scenarios, from sprinkling interactivity on traditional server-rendered pages, to full-blown single page applications with hundreds of components. Vue 3 takes this flexibility even further.</p><h3 id="layered-internal-modules" tabindex="-1">Layered internal modules <a class="header-anchor" href="#layered-internal-modules" aria-hidden="true">#</a></h3><p>Vue 3.0 core can still be used via a simple <code>&lt;script&gt;</code> tag, but its internals has been re-written from the ground up into <a href="https://github.com/vuejs/vue-next/tree/master/packages" target="_blank" rel="noreferrer">a collection of decoupled modules</a>. The new architecture provides better maintainability, and allows end users to shave off up to half of the runtime size via tree-shaking.</p><p>These modules also exposes lower-level APIs that unlocks many advanced use cases:</p><ul><li>The compiler supports custom AST transforms for build-time customizations (e.g. <a href="https://github.com/intlify/vue-i18n-extensions" target="_blank" rel="noreferrer">build-time i18n</a>)</li><li>The core runtime provides first-class API for creating custom renderers targeting different render targets (e.g. <a href="https://github.com/rigor789/nativescript-vue-next" target="_blank" rel="noreferrer">native mobile</a>, <a href="https://github.com/Planning-nl/vugel" target="_blank" rel="noreferrer">WebGL</a> or <a href="https://github.com/ycmjason/vuminal" target="_blank" rel="noreferrer">terminals</a>). The default DOM renderer is built using the same API.</li><li>The <a href="https://github.com/vuejs/vue-next/tree/master/packages/reactivity" target="_blank" rel="noreferrer"><code>@vue/reactivity</code> module</a> exports functions that provide direct access to Vue&#39;s reactivity system, and can be used as a standalone package. It can be used to pair with other templating solutions (e.g. <a href="https://github.com/yyx990803/vue-lit" target="_blank" rel="noreferrer">lit-html</a>) or even in non-UI scenarios.</li></ul><h3 id="new-apis-for-tackling-scale" tabindex="-1">New APIs for tackling scale <a class="header-anchor" href="#new-apis-for-tackling-scale" aria-hidden="true">#</a></h3><p>The 2.x Object-based API is largely intact in Vue 3. However, 3.0 also introduces the <a href="https://v3.vuejs.org/guide/composition-api-introduction.html" target="_blank" rel="noreferrer">Composition API</a> - a new set of APIs aimed at addressing the pain points of Vue usage in large scale applications. The Composition API builds on top of the reactivity API and enables logic composition and reuse similar to React hooks, more flexible code organization patterns, and more reliable type inference than the 2.x Object-based API.</p><p>Composition API can also be used with Vue 2.x via the <a href="https://github.com/vuejs/composition-api" target="_blank" rel="noreferrer">@vue/composition-api</a> plugin, and there are already Composition API utility libraries that work for both Vue 2 and 3 (e.g. <a href="https://github.com/antfu/vueuse" target="_blank" rel="noreferrer">vueuse</a>, <a href="https://github.com/pikax/vue-composable" target="_blank" rel="noreferrer">vue-composable</a>).</p><h3 id="performance-improvements" tabindex="-1">Performance Improvements <a class="header-anchor" href="#performance-improvements" aria-hidden="true">#</a></h3><p>Vue 3 has demonstrated <a href="https://docs.google.com/spreadsheets/d/1VJFx-kQ4KjJmnpDXIEaig-cVAAJtpIGLZNbv3Lr4CR0/edit?usp=sharing" target="_blank" rel="noreferrer">significant performance improvements</a> over Vue 2 in terms of bundle size (up to 41% lighter with tree-shaking), initial render (up to 55% faster), updates (up to 133% faster), and memory usage (up to 54% less).</p><p>In Vue 3, we have taken the approach of &quot;compiler-informed Virtual DOM&quot;: the template compiler performs aggressive optimizations and generates render function code that hoists static content, leaves runtime hints for binding types, and most importantly, flattens the dynamic nodes inside a template to reduce the cost of runtime traversal. The user therefore gets the best of both worlds: compiler-optimized performance from templates, or direct control via manual render functions when the use case demands.</p><h3 id="improved-typescript-integration" tabindex="-1">Improved TypeScript integration <a class="header-anchor" href="#improved-typescript-integration" aria-hidden="true">#</a></h3><p>Vue 3&#39;s codebase is written in TypeScript, with automatically generated, tested, and bundled type definitions so they are always up-to-date. Composition API works great with type inference. Vetur, our official VSCode extension, now supports template expression and props type checking leveraging Vue 3&#39;s improved internal typing. Oh, and Vue 3&#39;s typing <a href="https://github.com/vuejs/vue-next/blob/master/test-dts/defineComponent.test-d.tsx" target="_blank" rel="noreferrer">fully supports TSX</a> if that&#39;s your preference.</p><h3 id="experimental-features" tabindex="-1">Experimental Features <a class="header-anchor" href="#experimental-features" aria-hidden="true">#</a></h3><p>We have proposed <a href="https://github.com/vuejs/rfcs/pull/182" target="_blank" rel="noreferrer">two new features</a> for Singe-File Components (SFC, aka <code>.vue</code> files):</p><ul><li><a href="https://github.com/vuejs/rfcs/blob/sfc-improvements/active-rfcs/0000-sfc-script-setup.md" target="_blank" rel="noreferrer"><code>&lt;script setup&gt;</code>: syntactic sugar for using Composition API inside SFCs</a></li><li><a href="https://github.com/vuejs/rfcs/blob/sfc-improvements/active-rfcs/0000-sfc-style-variables.md" target="_blank" rel="noreferrer"><code>&lt;style vars&gt;</code>: state-driven CSS variables inside SFCs</a></li></ul><p>These features are already implemented and available in Vue 3.0, but are provided only for the purpose of gathering feedback. They will remain experimental until the RFCs are merged.</p><p>We have also implemented a currently undocumented <code>&lt;Suspense&gt;</code> component, which allows waiting on nested async dependencies (async components or component with <code>async setup()</code>) on initial render or branch switch. We are testing and iterating on this feature with the Nuxt.js team (<a href="https://nuxtjs.slides.com/atinux/state-of-nuxt-2020" target="_blank" rel="noreferrer">Nuxt 3 is on the way</a>) and will likely solidify it in 3.1.</p><h2 id="phased-release-process" tabindex="-1">Phased Release Process <a class="header-anchor" href="#phased-release-process" aria-hidden="true">#</a></h2><p>The release of Vue 3.0 marks the general readiness of the framework. While some of the frameworks sub projects may still need further work to reach stable status (specifically router and Vuex integration in the devtools), we believe it&#39;s suitable to start new, green-field projects with Vue 3 today. We also encourage library authors to start upgrading your projects to support Vue 3.</p><p>Check out the <a href="https://v3.vuejs.org/guide/migration/introduction.html#supporting-libraries" target="_blank" rel="noreferrer">Vue 3 Libraries Guide</a> for details on all framework sub projects.</p><h3 id="migration-and-ie11-support" tabindex="-1">Migration and IE11 Support <a class="header-anchor" href="#migration-and-ie11-support" aria-hidden="true">#</a></h3><p>We have pushed back the migration build (v3 build with v2 compatible behavior + migration warnings) and the IE11 build due to time constraints, and are aiming to focus on them in Q4 2020. Therefore, users planning to migrate an existing v2 app or require IE11 support should be aware of these limitations at this time.</p><h3 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-hidden="true">#</a></h3><p>For the near term after release, we will focus on:</p><ul><li>Migration build</li><li>IE11 support</li><li>Router and Vuex integration in new devtools</li><li>Further improvements to template type inference in Vetur</li></ul><p>For the time being, the documentation websites, GitHub branches, and npm dist tags for Vue 3 and v3-targeting projects will remain under <code>next</code>-denoted status. This means <code>npm install vue</code> will still install Vue 2.x and <code>npm install vue@next</code> will install Vue 3. <strong>We are planning to switch all doc links, branches and dist tags to default to 3.0 in early 2021.</strong></p><p>At the same time, we have started planning for 2.7, which will be the last planned minor release of the 2.x release line. 2.7 will be backporting compatible improvements from v3, and emit warnings on usage of APIs that are removed/changed in v3 to help with potential migration. We are planning to work on 2.7 in Q1 2021, which will directly become LTS upon release with an 18 months maintenance lifespan.</p><h2 id="trying-it-out" tabindex="-1">Trying It Out <a class="header-anchor" href="#trying-it-out" aria-hidden="true">#</a></h2><p>To learn more about Vue 3.0, check out our <a href="https://v3.vuejs.org/" target="_blank" rel="noreferrer">new documentation website</a>. If you are an existing Vue 2.x user, go directly to the <a href="https://v3.vuejs.org/guide/migration/introduction.html" target="_blank" rel="noreferrer">Migration Guide</a>.</p><hr><ul><li>*based on <a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd" target="_blank" rel="noreferrer">Vue Devtools Chrome extension</a> weekly active users as reported by Google.</li></ul></div>]]></content:encoded>
        </item>
    </channel>
</rss>